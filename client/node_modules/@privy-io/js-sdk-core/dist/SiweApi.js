import{SiweLink as e,SiweAuthenticate as t,SiweInit as n}from"@privy-io/public-api";class i{_privyInternal;_wallet=void 0;_preparedMessage;constructor(e){this._privyInternal=e}async linkWithSiwe(t,n,i){const s=n||this._wallet,r=i||this._preparedMessage;if(!s)throw new Error("A wallet must be provided in the init step or as an argument to linkWithSiwe");if(!r)throw new Error("A message must be generated and signed before being used to link a wallet to privy");try{await this._privyInternal.fetch(e,{body:{message:r,signature:t,chainId:s.chainId,walletClientType:s.walletClientType,connectorType:s.connectorType}});return(await this._privyInternal.refreshSession()).user}catch(e){throw e}}async loginWithSiwe(e,n,i){const s=n||this._wallet,r=i||this._preparedMessage;if(!s)throw new Error("A wallet must be provided in the init step or as an argument to loginWithSiwe");if(!r)throw new Error("A message must be generated and signed before being used to login to privy with a wallet");try{const n=await this._privyInternal.fetch(t,{body:{signature:e,message:r,chainId:s.chainId,walletClientType:s.walletClientType,connectorType:s.connectorType}});return await Promise.all([this._privyInternal.session.storeToken(n.token),this._privyInternal.session.storeRefreshToken(n.refresh_token),this._privyInternal.session.storeIdentityToken(n.identity_token)]),this._privyInternal.callbacks?.setUser?.(n.user),n}catch(e){throw e}}async init(e,t,i){this._wallet=e;const s=await this._privyInternal.fetch(n,{body:{address:e.address}}),{nonce:r}=s,a=`${(o={chainId:e.chainId.toString().replace("eip155:",""),address:e.address,issuedAt:(new Date).toISOString(),statement:"By signing, you are proving you own this wallet and logging in. This does not initiate a transaction or cost any fees.",domain:t,nonce:r,uri:i}).domain} wants you to sign in with your Ethereum account:\n${o.address}\n\n${o.statement}\n\nURI: ${o.uri}\nVersion: 1\nChain ID: ${o.chainId}\nNonce: ${o.nonce}\nIssued At: ${o.issuedAt}\nResources:\n- https://privy.io`;var o;return this._preparedMessage=a,{nonce:r,message:a}}}export{i as default};
//# sourceMappingURL=SiweApi.js.map
